# If you come from bash you might have to change your $PATH.

# From `brew install coreutils`:
#   Commands also provided by macOS have been installed with the prefix "g".
#   If you need to use these commands with their normal names, you
#   can add a "gnubin" directory to your PATH from your bashrc like:
#   PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"

PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
export PATH=$HOME/bin:/usr/local/bin:$PATH

################################################################################
# Path to your oh-my-zsh installation.
export ZSH=/Users/tonyyli/.dotfiles/oh-my-zsh

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="agnoster"

# Set list of themes to load
# Setting this variable when ZSH_THEME=random
# cause zsh load theme from this variable instead of
# looking in ~/.oh-my-zsh/themes/
# An empty array have no effect
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  common-aliases
  git
  git-extras
  brew
  pip
  fasd
  colorize
  colored-man-pages
)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='mvim'
fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
alias zshconfig="$EDITOR ~/.zshrc"
alias ohmyzsh="$EDITOR $ZSH/oh-my-zsh.sh"
alias srz="source ~/.zshrc"
alias fp="greadlink -f"

# Initialize fasd (https://github.com/clvv/fasd)
eval "$(fasd --init auto)"

################################################################################
# BEGIN COPIED bashrc 2018-04-28

### PATHS

# Python scripts and functions
export PATH=$PATH:$HOME/Dropbox/Code/python/scripts:$HOME/Dropbox/Code/python
export PYTHONPATH=$PYTHONPATH:$HOME/Dropbox/Code/python/scripts:$HOME/Dropbox/Code/python
export PATH="/Users/tonyyli/anaconda/bin:$PATH"

export WORKON_HOME=$HOME/.virtualenvs
source /Users/tonyyli/anaconda/bin/virtualenvwrapper.sh
alias mkve="mkvirtualenv"

# Bash scripts
export PATH=$PATH:$HOME/scripts/bash
export PATH=$PATH:$HOME/bin

# Scala
export SCALA_HOME=/usr/local/share/scala
export PATH=$PATH:$SCALA_HOME/bin

## If not running interactively, don't do anything
#[ -z "$PS1" ] && return
#
## don't put duplicate lines in the history. See bash(1) for more options
## ... or force ignoredups and ignorespace
#HISTCONTROL=ignoredups:ignorespace
#
## append to the history file, don't overwrite it
#shopt -s histappend
#
## for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
#HISTSIZE=1000
#HISTFILESIZE=2000
#
## check the window size after each command and, if necessary,
## update the values of LINES and COLUMNS.
#shopt -s checkwinsize
#
## make less more friendly for non-text input files, see lesspipe(1)
#[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"
#
## set variable identifying the chroot you work in (used in the prompt below)
#if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
#    debian_chroot=$(cat /etc/debian_chroot)
#fi
#
## set a fancy prompt (non-color, unless we know we "want" color)
#case "$TERM" in
#    xterm-color) color_prompt=yes;;
#esac
#
## uncomment for a colored prompt, if the terminal has the capability; turned
## off by default to not distract the user: the focus in a terminal window
## should be on the output of commands, not on the prompt
#force_color_prompt=yes
#
#if [ -n "$force_color_prompt" ]; then
#    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
#	# We have color support; assume it's compliant with Ecma-48
#	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
#	# a case would tend to support setf rather than setaf.)
#	color_prompt=yes
#    else
#	color_prompt=
#    fi
#fi
#
#if [ "$color_prompt" = yes ]; then
#    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
#else
#    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
#fi
#unset color_prompt force_color_prompt
#
### If this is an xterm set the title to user@host:dir
##case "$TERM" in
##xterm*|rxvt*)
##    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
##    ;;
##*)
##    ;;
##esac
#
#
## Alias definitions.
## You may want to put all your additions into a separate file like
## ~/.bash_aliases, instead of adding them here directly.
## See /usr/share/doc/bash-doc/examples in the bash-doc package.
#
#if [ -f ~/.bash_aliases ]; then
#    . ~/.bash_aliases
#fi
#
## enable programmable completion features (you don't need to enable
## this, if it's already enabled in /etc/bash.bashrc and /etc/profile
## sources /etc/bash.bashrc).
#if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
#    . /etc/bash_completion
#fi
## 

# END COPIED bashrc

################################################################################

# BEGIN COPIED bash_aliases 2018-05-06

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ] || [ -x "/usr/local/opt/coreutils/libexec/gnubin/dircolors" ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# some more ls aliases
#alias ls='ls -G' # color support of ls, added for Mac OS
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -G'

## Allow color highlighting in less
export LESS='-R'
export LESSOPEN='|~/.lessfilter %s'
#
####
#### Other useful aliases
####
#alias c='cd'
#alias rm='rm -i'   # Avoid accidentally removing items

# MacVim aliases
if [[ "$OSTYPE" == "darwin"* ]]; then # Mac OSX
    alias gvim='mvim'
    alias vim='/Applications/MacVim.app/Contents/MacOS/Vim'
fi

# Python aliases
alias ipy='ipython'
alias jn='jupyter notebook &'
#
## Get-to-work-faster aliases
#alias kinit='kinit tonyyli@SLAC.STANFORD.EDU' # Requires kinit
#alias nt='nametab' # short script to name current iTerm tab
#
## Git aliases
#alias gg='git clone '
#alias gp='git push '
alias gs='git status '
#alias ga='git add '
#alias gb='git branch '
#alias gc='git commit'
#alias gd='git diff'
#alias go='git checkout '
#alias gk='gitk --all&'
#alias gx='gitx --all'

# END bash_aliases
